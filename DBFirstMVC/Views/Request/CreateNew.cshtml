@model DBFirstMVC.Models.CreateNewRequest

@{
    ViewBag.Title = "Create a Request";
    ViewBag.CurrentUserTitle = @ViewBag.CurrentUser;
}

<h2>Create a Request</h2>
 @using (Html.BeginForm("CreateRequest","Request",FormMethod.Post)) {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
        <div class="generalRequest">
       

                    <fieldset>
                        <legend>Request</legend>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.ModCode, "Module")
                            Search below or choose from list:
                        </div>
                        <div class="editor-field">
                            <input type="text" id="txtModSearch" placeholder="e.g. COA101" />
                            <input type="button" id="btnModSearch" value="Filter" />
                            @Html.DropDownListFor(model => model.Request.ModCode,new SelectList(ViewBag.Modules,"ModCode", "FullModule"), "-- Select Module --")
                            @Html.ValidationMessageFor(model => model.Request.ModCode)
                        </div>
                        <div id="studentsOnModuleDiv"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.SessionType, "Session Type")
                        </div>
                        <div class="editor-field">     
                            <label>@Html.RadioButtonFor(model => model.Request.SessionType, "Lecture", true ) Lecture</label>
                            <label>@Html.RadioButtonFor(model => model.Request.SessionType, "Tutorial", false) Tutorial</label> 
    
                            @Html.ValidationMessageFor(model => model.Request.SessionType)
                        </div>

                         <div class="editor-label">
                            @Html.LabelFor(model => model.Request.DayID, "Day")
                        </div>
                        <div class="editor-field">
                        @{
                            List<SelectListItem> listItems= new List<SelectListItem>();
                            listItems.Add(new SelectListItem{Text = "Monday", Value = "1"});
                            listItems.Add(new SelectListItem{Text = "Tuesday", Value = "2"});
                            listItems.Add(new SelectListItem{Text = "Wednesday", Value = "3"});
                            listItems.Add(new SelectListItem{Text = "Thursday", Value = "4"});
                            listItems.Add(new SelectListItem{Text = "Friday", Value = "5"});   
                        }

                        @Html.DropDownListFor(model => model.Request.DayID, listItems, "-- Select Day --")

                            @Html.ValidationMessageFor(model => model.Request.DayID)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.PeriodID, "Period")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.Request.PeriodID,ViewBag.Periods as IEnumerable<SelectListItem>,"--Select Period--",new {@class = "required" })
                            @Html.ValidationMessageFor(model => model.Request.PeriodID)
                        </div>

                         <div class="editor-label">
                           @Html.LabelFor(model => model.Request.SessionLength, "Session Length")
                        </div>
                        <div class="editor-field">
                            @{ List<SelectListItem> SeshLengths= new List<SelectListItem>();}
                            @Html.DropDownListFor(model => model.Request.SessionLength,SeshLengths,"-- Select Length --", new {@class = "required" })
                            @Html.ValidationMessageFor(model => model.Request.SessionLength)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.PriorityRequest, "Priority Request")
                        </div>
                        <div class="editor-field">
                            <!--<input type="checkbox" id="cbPriorityRequest" /> -->
                            @Html.CheckBox("cbPriorityRequest")
                            @Html.ValidationMessageFor(model => model.Request.PriorityRequest)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.SpecialRequirements, "Special Requirements")
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Request.SpecialRequirements)
                            @Html.ValidationMessageFor(model => model.Request.SpecialRequirements)
                        </div>
                    </fieldset>
                
   
        </div>
 
        <div class="generalRequest">
                    <fieldset>
                        <legend>Request</legend>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.ModCode, "Facilites")
                        </div>
                        <div id="facListDiv">
                            @foreach (var item in Model.Facilities) {
                                <input type="checkbox" name="facList"  value="@item.FacilityName" id="fac@(item.FacilityID)"> @item.FacilityName<br />
                            }
                    
                        </div>                                  
                        <input type="button" id="btnFindRooms" value="Find Rooms" /><br />
                        <select id="matchedRooms"></select>
                        <input type="button" id="btnAddMatchedRoom" value="Add to List" />
                    </fieldset>
         
        </div>
        <div class="generalRequest">


                    <fieldset>
                        <legend>Request</legend>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Parks, "Park")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("Park","--Select Park--")
                            @Html.ValidationMessageFor(model => model.Parks)
                    
                        </div>
                        <div class="editor-label" id="BuildingDiv"></div>
                        <div class="editor-field">
                            <select id="Building"></select><br /><!-- this will dynamically altered -->
                        </div>
                        <div class="editor-label" id="RoomDiv"></div>
                        <div class="editor-field">
                            <select id="Room"></select><br /><!-- this will dynamically altered -->
                        </div>
                        <input type="button" id="btnAddToRoom" value="Add To List" />
                        <a id="studentsLeft" data-left="0" data-max="0"></a>
                        <div id="listOfRoomsDiv"><table id="listOfRooms"></table></div> <!-- this will dynamically altered -->

                    </fieldset>
         
         
        </div>
        <p>
            <input type="button" id="btnCheck" value="Create" />
            <input type="submit" value="Create" id="btnCreate" />
        </p>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@section CreateNewScript{
    <script type="text/javascript">
        $(document).ready(function () {
           
            //$('#siteTitle').append('<a style="color:gray; font-style:italic; font-size:0.6em;">  '+'@ViewBag.CurrentUser'+'</a>');
            $('#Building').hide();
            $('#Room').hide();
            $('#btnAddToRoom').hide();
            $('#matchedRooms').hide();
            $('#btnAddMatchedRoom').hide();
            $('#btnCreate').hide();
            $('#Request_SpecialRequirements').attr("Placeholder", "e.g. Dimmer Lights");


        


            //Function to add the list of buildings based on park choice
            $("#Park").on('change', function () {
                var park = $(this).val();
                $('#Room').hide(200);
                $('#btnAddToRoom').hide();
                $('#RoomDiv').html("");
                $('#BuildingDiv').html("");
                if (park.substr(0, 1) == '') { //Check that the --Select Park-- hasnt been clicked
                    $('#Building').hide(200);
                    return;
                }

                $.post('@Url.Action("GetBuildings", "Request")', { chosenPark: park }, function (data) {
                // Postback response of buildings
                var buildings = data;
                html = "";
                html += "<option value='--Select Building--'>--Select Building--</option>";
                //create a dropdown list of buildings
                for (var i = 0; i < buildings.length; i++) {
                    if (buildings[i] != park)
                        html += "<option id='" + buildings[i] + "' value='" + buildings[i] + "'>" + buildings[i] + "</option>";
                }
                $('#Building').html(html); //add this html to the tag
                $('#BuildingDiv').html("<label for='Request_Building'>Building</label>").show(200);
                $('#Building').show(200);
                });  //end $.post
            }); //end function


            //Function to add the list of rooms based on building choice
            $("#Building").on('change', function () {
                var building = $(this).val();
                if (building.substr(0, 1) == "-") {
                    $('#Room').hide();
                    $('#btnAddToRoom').hide();
                    $('#RoomDiv').html("");
                    return;
                }
                $.post('@Url.Action("GetRooms", "Request")', { chosenBuilding: building }, function (data) {
                    // Postback response of rooms
                    var rooms = data;
                    html = "";
                    //create a dropdown list of rooms
                    for (var i = 0; i < rooms.length; i++) {
                            html += "<option id='" + rooms[i] + "' value='" + rooms[i] + "'>" + rooms[i] + "</option>";
                    }
                    $('#Room').html(html); //add this html to the tag
                    $('#RoomDiv').html("<label for='Request_Room'>Room</label>").show(200);
                    $('#Room').show(200);
                    $('#btnAddToRoom').show(200);
                });  //end $.post
            }); //end function


            //Function to add a room to the displayed list of chosen rooms
            $('#btnAddToRoom').click(function(){
                var room = $('#Room').val();
                var roomID = room.replace(/\./g,'');
                var len = $('#listOfRooms').children().children().length;

                //return if they have picked 3 rooms
                if (len > 2)
                    return;


                //Check that the room doesnt already exist in the list
                for (var i = 0; i < len; i++) {
                    if ($('#listOfRooms').children().children().eq(i).attr('id') == roomID)
                        return;
                }


                //Check that there are students left to allocate
                if ($('#studentsLeft').attr('data-left') < 1) {
                    alert("There are no more students left to allocate");
                    return;
                }


                var roomSize = 0;
                $.post('@Url.Action("getRoomSize", "Request")', { roomName: room }, function (data) {
                    roomSize = data;
                }).done(function(result){
                    var size = roomSize;
                    //Create html for the room item and add it to the list
                    var html = "<tr id='" + roomID + "'>";
                    var studentsLeft = parseInt($('#studentsLeft').attr('data-left'));
                    //alert("students left: " + studentsLeft + " < roomSize: " + roomSize);
                    if (studentsLeft < roomSize)
                        size = studentsLeft;
                    //we need to add this hidden input so that we can pass the room value to the controller
                    html+= "<input type='hidden' id='"+roomID+"' name='chosenRooms' value='"+room+"' />";
                    html += "<td>" + room + "</td>";
                    html += "<td><input id='students" + roomID + "' type='number' min='1' max='" + roomSize + "' value='" + size + "' style='width:50px;' name='groupSizes'/></td>";
                    html += "<td><input type='checkbox' id='priority" + roomID + "' name='pRooms' value='true'/> Priority?</td>";
                    html += "<input type='hidden' id='priority" + roomID + "hidden' name='pRooms' value='false' />";
                    html += "<td><img src='/Images/delete.png' id='del" + roomID + "' onclick='deleteRoom(this.id);' height='15' width='15' style='padding-top: 7px;'/></td>";
                    html += "</tr>";
                    $('#listOfRooms').append(html);
                    $('#listOfRoomsDiv').show();

                    //onchange function for the group size
                    $("#students" + roomID).on('change keyup keydown', function () {
                        var x = $("#students" + roomID).val();
                        var len = $('#listOfRooms').children().children().children().length;
                        var left = $('#studentsLeft').attr('data-max');
                        for (var i = 2; i < len; i += 6)
                            left -= $('#listOfRooms').children().children().children().eq(i).children().eq(0).val();
                        if (left < 0 || x > parseInt($("#students" + roomID).attr('max'))) {
                            $("#students" + roomID).val("1");
                            $("students" + roomID).blur();
                            return;
                        }
                        $('#studentsLeft').text(left + " student(s) left");
                        $('#studentsLeft').attr('data-left', left);
                    });

                    //onchange function for the priority room (there can only be 1)
                    $('#priority' + roomID).on("change", function () {

                        //allow the user to deselect the priority room
                        if ($('#priority' + roomID).attr("checked") != "checked") {
                            $(this).prop("checked", false);
                            return;
                        }
                     
                        var len = $('#listOfRooms').children().children().children().length; //this finds if there are any rooms selected
                        for (var i = 3; i < len; i+=6) {
                            if ($('#listOfRooms').children().children().children().eq(i).children().eq(0).attr('checked') == 'checked')
                                $('#listOfRooms').children().children().children().eq(i).children().eq(0).prop("checked", false);
                        }
                        $('#priority' + roomID).prop("checked", true);
                    });

                    $("#students" + roomID).trigger("change");

                });
            });


            //Function to change the session lengths available from the chosen period
            $('#Request_PeriodID').change(function () {
                var period = $(this).val();
                var max = 10 - period;
                if (period == "")
                    max = 0;
               $('#Request_SessionLength').html("");
               $('#Request_SessionLength').append('<option value="">-- Select Length --</option>');
                for (var i = 1; i <= max; i++) {
                    if(i==1)
                        $('#Request_SessionLength').append("<option value='" + i + "'>" + i + " hour</option>");
                    else
                        $('#Request_SessionLength').append("<option value='" + i + "'>" + i + " hours</option>");
                }

            });
            //Function to filter the modules based on the search string
            $('#btnModSearch').click(function () {
                var str = $('#txtModSearch').val();
                if (str.replace(/ /g, '') == "")
                    str = "";
                var results;
                $.post('@Url.Action("getModules", "Request")', { searchString: str }, function (data) {
                    results = data;
                    $('#Request_ModCode').html('<option value="">-- Select Module --</option>');
                    for (var i = 0; i < results.length; i++) {
                        var modCode = results[i].Whole.substr(0, 6); //extract modcode from string
                        $('#Request_ModCode').append('<option value="'+modCode+'">' + results[i].Whole + '</option>');
                    }

                });
            });
            //Function to display a list of rooms based on ticked facilities
            $("#btnFindRooms").click(function () {
                var fac = [];
                var len = $('#facListDiv').children().length;
                for (var i = 0; i < len; i += 2) {
                    if ($('#facListDiv').children().eq(i).is(":checked")) {
                        fac.push($('#facListDiv').children().eq(i).val());
                    }
                }
                //alert(fac.join("\n"));

                facs = JSON.stringify(fac);
                var html = "";
                $.post('@Url.Action("getMatchedRooms", "Request")', { facList: fac.join(',') }, function (data) {
                    var results = data;
                    for (var i = 0; i < results.length; i++) {
                        var name = results[i].Name;
                        var roomID = name.replace(/\./g, '');
                        html += "<option id='matched"+roomID+"'>"+name+"</option>";
                    }
                    if (results.length == 0) {
                        alert("no room has all of the chosen facilities");
                        $('#matchedRooms').hide();
                        $('#btnAddMatchedRoom').hide();
                        return;
                    }
                    $('#matchedRooms').fadeOut(300);
                    $('#matchedRooms').promise().done(function () {
                        $('#matchedRooms').html(html).show(300);
                        $('#btnAddMatchedRoom').show(300);
                    });
                },"json");
            });

            //Function to add a matched room to the room list (extremely similiar to the btnAddToRoom click function)
            $('#btnAddMatchedRoom').click(function () {
                var room = $('#matchedRooms').val();
                var roomID = room.replace(/\./g, '');
                var len = $('#listOfRooms').children().children().length;

                //return if they have picked 3 rooms
                if (len > 2)
                    return;


                //Check that the room doesnt already exist in the list
                for (var i = 0; i < len; i++) {
                    if ($('#listOfRooms').children().children().eq(i).attr('id') == roomID)
                        return;
                }

                //Check that there are students left to allocate
                if ($('#studentsLeft').attr('data-left') < 1) {
                    alert("There are no more students left to allocate");
                    return;
                }

            
                var roomSize = 0;
                $.post('@Url.Action("getRoomSize", "Request")', { roomName: room }, function (data) {
                    roomSize = data;
                    }).done(function(result){
                        var size = roomSize;
                        //Create html for the room item and add it to the list
                        var html = "<tr id='" + roomID + "'>";
                        var studentsLeft = parseInt($('#studentsLeft').attr('data-left'));
                        //alert("students left: " + studentsLeft + " < roomSize: " + roomSize);
                        if (studentsLeft < roomSize)
                            size = studentsLeft;

                        //we need to add this hidden input so that we can pass the room value to the controller
                        html += "<input type='hidden' id='" + roomID + "' name='chosenRooms' value='" + room + "' />";
                        html += "<td>" + room + "</td>";
                        html += "<td><input id='students" + roomID + "' type='number' min='1' max='" + roomSize + "' value='" + size + "' style='width:50px;' name='groupSizes'/></td>";
                        html += "<td><input type='checkbox' id='priority" + roomID + "' name='pRooms' value='true'/> Priority?</td>";
                        html += "<input type='hidden' id='priority" + roomID + "hidden' name='pRooms' value='false' />";
                        html += "<td><img src='/Images/delete.png' id='del" + roomID + "' onclick='deleteRoom(this.id);' height='15' width='15' style='padding-top: 7px;'/></td>";
                        html += "</tr>";
                        $('#listOfRooms').append(html);
                        $('#listOfRoomsDiv').show();



                        //onchange function for the group size
                        $("#students" + roomID).on('change keyup keydown', function () {
                            var x = $("#students" + roomID).val();
                            var len = $('#listOfRooms').children().children().children().length;
                            var left = $('#studentsLeft').attr('data-max');
                            for (var i = 2; i < len; i += 6)
                                left -= $('#listOfRooms').children().children().children().eq(i).children().eq(0).val();
                            if (left < 0 || x > parseInt($("#students" + roomID).attr('max'))) {
                                $("#students" + roomID).val("1");
                                $("students" + roomID).blur();
                                return;
                            }
                            $('#studentsLeft').text(left + " student(s) left");
                            $('#studentsLeft').attr('data-left', left);
                        });

                        //onchange function for the priority room (there can only be 1)
                        $('#priority' + roomID).on("change", function () {

                            //allow the user to deselect the priority room
                            if ($('#priority' + roomID).attr("checked") != "checked") {
                                $(this).prop("checked", false);
                                return;
                            }
                     
                            var len = $('#listOfRooms').children().children().children().length; //this finds if there are any rooms selected
                            for (var i = 3; i < len; i+=6) {
                                if ($('#listOfRooms').children().children().children().eq(i).children().eq(0).attr('checked') == 'checked')
                                    $('#listOfRooms').children().children().children().eq(i).children().eq(0).prop("checked", false);
                            }
                            $('#priority' + roomID).prop("checked", true);
                        });

                        $("#students" + roomID).trigger("change");
                    });


            });


            //Function to change the label of module students and module info displayed depending on chosen module
            $("#Request_ModCode").change(function (e) {
                var module = $(this).val().substr(0, 6);
            
                //get the students from the module
                $.post('@Url.Action("getModuleStudents", "Request")', { modCode: module }, function (data) {
                    var lecturer = "";
                    var students = 0;
                    var html = "";
                    students = data;
                    $('#studentsLeft').text(students + " student(s) left");
                    $('#studentsLeft').attr('data-max', students);
                    $('#studentsLeft').attr('data-left', students);
                    html += students + " students on this module";

                    //get the lecturer from the module, must be inside the first post so we can use the same variables
                    $.post('@Url.Action("getModuleLecturers", "Request")', { modCode: module }, function (data) {
                        var results = data;
                        if (results.length > 0)
                            html += " taught by ";
                        for (var i = 0; i < results.length; i++) {
                            if (i == results.length - 1)
                                lecturer += "<u>"+results[i].Whole+"</u>";
                            else
                                lecturer += "<u>"+results[i].Whole + "</u> and ";
                        }
                        html += lecturer;
                        $('#studentsOnModuleDiv').html(html); //write the information to the display
                        $("#listOfRooms").find("input:last").trigger("change");//change the students left label on the room choice
                    });

                });
            });

            //function to ensure the user hasnt entered a room with no group size
            $('body').click(function () {
                var len = $('#listOfRooms').children().children().children().length;
                for (var i = 2 ; i < len; i+=6) {
                    if( $('#listOfRooms').children().children().children().eq(i).children().eq(0).val() == "")
                        $('#listOfRooms').children().children().children().eq(i).children().eq(0).val(0)
                        
                }
            });

            //Function to check user inputs before sending the request to the controller, 
            $('#btnCheck').click(function () {
                var len = $('#listOfRooms').children().children().children().length; //this finds if there are any rooms selected

                if ((len > 0) && ((parseInt($('#studentsLeft').attr('data-left')) > 0))) { //check there are students left and rooms selected
                    if (confirm("You still have students left to allocate into rooms. Continue anyway?"))
                        $('#btnCreate').trigger('click');
                }
                else {
                    $('#btnCreate').trigger('click');
                }

            });







        }); //document ready


        //Function to delete the room chosen
        function deleteRoom(id) {
            id = id.substr(3, id.length); //change 'delJB021' to 'JB021'
            var size = $('#'+id).children().eq(2).children().val();
            if (size == "")
                size = 0;
            var left = $('#studentsLeft').attr('data-left');
            var newLeft = parseInt(left) + parseInt(size);
            $('#studentsLeft').attr('data-left', newLeft); //change label showing students left
            $('#studentsLeft').text(newLeft + " student(s) left");
            $('#' + id).remove(); //remove the html <tr> element

        }
    </script>

}


