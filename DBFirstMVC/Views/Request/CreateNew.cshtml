@model DBFirstMVC.Models.CreateNewRequest

@{
    ViewBag.Title = "Create a Request";
    ViewBag.CurrentUserTitle = @ViewBag.CurrentUser;
}

<h2>Create a Request</h2>
 @using (Html.BeginForm("CreateRequest","Request",FormMethod.Post)) {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
        <div class="generalRequest">
       

                    <fieldset>
                        <legend>Request</legend>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.ModCode, "Module")
                            Search below or choose from list:
                        </div>
                        <div class="editor-field">
                            <input type="text" id="txtModSearch" placeholder="e.g. COA101" />
                            <input type="button" id="btnModSearch" value="Filter" />
                            @Html.DropDownListFor(model => model.Request.ModCode,new SelectList(ViewBag.Modules,"ModCode", "FullModule"), "-- Select Module --")
                            @Html.ValidationMessageFor(model => model.Request.ModCode)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.SessionType, "Session Type")
                        </div>
                        <div class="editor-field">     
                            <label>@Html.RadioButtonFor(model => model.Request.SessionType, "Lecture", true ) Lecture</label>
                            <label>@Html.RadioButtonFor(model => model.Request.SessionType, "Tutorial", false) Tutorial</label> 
    
                            @Html.ValidationMessageFor(model => model.Request.SessionType)
                        </div>

                         <div class="editor-label">
                            @Html.LabelFor(model => model.Request.DayID, "Day")
                        </div>
                        <div class="editor-field">
                        @{
                            List<SelectListItem> listItems= new List<SelectListItem>();
                            listItems.Add(new SelectListItem{Text = "Monday", Value = "1"});
                            listItems.Add(new SelectListItem{Text = "Tuesday", Value = "2"});
                            listItems.Add(new SelectListItem{Text = "Wednesday", Value = "3"});
                            listItems.Add(new SelectListItem{Text = "Thursday", Value = "4"});
                            listItems.Add(new SelectListItem{Text = "Friday", Value = "5"});   
                        }

                        @Html.DropDownListFor(model => model.Request.DayID, listItems, "-- Select Day --")

                            @Html.ValidationMessageFor(model => model.Request.DayID)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.PeriodID, "Period")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.Request.PeriodID,ViewBag.Periods as IEnumerable<SelectListItem>,"--Select Period--",new {@class = "required" })
                            @Html.ValidationMessageFor(model => model.Request.PeriodID)
                        </div>

                         <div class="editor-label">
                           @Html.LabelFor(model => model.Request.SessionLength, "Session Length")
                        </div>
                        <div class="editor-field">
                            @{ List<SelectListItem> SeshLengths= new List<SelectListItem>();}
                            @Html.DropDownListFor(model => model.Request.SessionLength,SeshLengths,"-- Select Length --", new {@class = "required" })
                            @Html.ValidationMessageFor(model => model.Request.SessionLength)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.PriorityRequest, "Priority Request")
                        </div>
                        <div class="editor-field">
                            <!--<input type="checkbox" id="cbPriorityRequest" /> -->
                            @Html.CheckBox("cbPriorityRequest")
                            @Html.ValidationMessageFor(model => model.Request.PriorityRequest)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.SpecialRequirements, "Special Requirements")
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Request.SpecialRequirements)
                            @Html.ValidationMessageFor(model => model.Request.SpecialRequirements)
                        </div>
                    </fieldset>
                
   
        </div>
 
        <div class="generalRequest">
                    <fieldset>
                        <legend>Request</legend>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Request.ModCode, "Facilites")
                        </div>
                        <div id="facListDiv">
                            @foreach (var item in Model.Facilities) {
                                <input type="checkbox" name="facList"  value="@item.FacilityName" id="fac@(item.FacilityID)"> @item.FacilityName<br />
                            }
                    
                        </div>                                  
                        <input type="button" id="btnFindRooms" value="Find Rooms" /><br />
                        <select id="matchedRooms"></select>
                        <input type="button" id="btnAddMatchedRoom" value="Add to List" />
                    </fieldset>
         
        </div>
        <div class="generalRequest">


                    <fieldset>
                        <legend>Request</legend>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Parks, "Park")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("Park","--Select Park--")
                            @Html.ValidationMessageFor(model => model.Parks)
                    
                        </div>
                        <div class="editor-label" id="BuildingDiv"></div>
                        <div class="editor-field">
                            <select id="Building"></select><br /><!-- this will dynamically altered -->
                        </div>
                        <div class="editor-label" id="RoomDiv"></div>
                        <div class="editor-field">
                            <select id="Room"></select><br /><!-- this will dynamically altered -->
                        </div>
                        <input type="button" id="btnAddToRoom" value="Add To List" />
                        <div id="listOfRoomsDiv"><table id="listOfRooms"></table></div> <!-- this will dynamically altered -->

                    </fieldset>
         
         
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@section CreateNewScript{
    <script type="text/javascript">
        $(document).ready(function () {
           
            //$('#siteTitle').append('<a style="color:gray; font-style:italic; font-size:0.6em;">  '+'@ViewBag.CurrentUser'+'</a>');
            $('#Building').hide();
            $('#Room').hide();
            $('#btnAddToRoom').hide();
            $('#matchedRooms').hide();
            $('#btnAddMatchedRoom').hide();

            $('#Request_SpecialRequirements').attr("Placeholder", "e.g. Dimmer Lights");


        });


        //Function to add the list of buildings based on park choice
        $("#Park").on('change', function () {
            var park = $(this).val();
            $('#Room').hide(200);
            $('#btnAddToRoom').hide();
            $('#RoomDiv').html("");
            $('#BuildingDiv').html("");
            if (park.substr(0, 1) == '') { //Check that the --Select Park-- hasnt been clicked
                $('#Building').hide(200);
                return;
            }

            $.post('@Url.Action("GetBuildings", "Request")', { chosenPark: park }, function (data) {
            // Postback response of buildings
            var buildings = data;
            html = "";
            html += "<option value='--Select Building--'>--Select Building--</option>";
            //create a dropdown list of buildings
            for (var i = 0; i < buildings.length; i++) {
                if (buildings[i] != park)
                    html += "<option id='" + buildings[i] + "' value='" + buildings[i] + "'>" + buildings[i] + "</option>";
            }
            $('#Building').html(html); //add this html to the tag
            $('#BuildingDiv').html("<label for='Request_Building'>Building</label>").show(200);
            $('#Building').show(200);
            });  //end $.post
        }); //end function


        //Function to add the list of rooms based on building choice
        $("#Building").on('change', function () {
            var building = $(this).val();
            if (building.substr(0, 1) == "-") {
                $('#Room').hide();
                $('#btnAddToRoom').hide();
                $('#RoomDiv').html("");
                return;
            }
            $.post('@Url.Action("GetRooms", "Request")', { chosenBuilding: building }, function (data) {
                // Postback response of rooms
                var rooms = data;
                html = "";
                //create a dropdown list of rooms
                for (var i = 0; i < rooms.length; i++) {
                        html += "<option id='" + rooms[i] + "' value='" + rooms[i] + "'>" + rooms[i] + "</option>";
                }
                $('#Room').html(html); //add this html to the tag
                $('#RoomDiv').html("<label for='Request_Room'>Room</label>").show(200);
                $('#Room').show(200);
                $('#btnAddToRoom').show(200);
            });  //end $.post
        }); //end function


        //Function to add a room to the displayed list of chosen rooms
        $('#btnAddToRoom').click(function(){
            var room = $('#Room').val();
            var roomID = room.replace(/\./g,'');
            var len = $('#listOfRooms').children().children().length;

            //return if they have picked 3 rooms
            if (len > 2)
                return;


            //Check that the room doesnt already exist in the list
            for (var i = 0; i < len; i++) {
                if ($('#listOfRooms').children().children().eq(i).attr('id') == roomID)
                    return;
            }

            //Create html for the room item and add it to the list
            var html = "<tr id='" + roomID + "'>";
            //we need to add this hidden input so that we can pass the room value to the controller
            html+= "<input type='hidden' id='"+roomID+"' name='chosenRooms' value='"+room+"' />";
            html += "<td>" + room + "</td>";
            html += "<td><img src='/Images/delete.png' id='del"+roomID+"' onclick='deleteRoom(this.id);' height='15' width='15'/></td>";
            html += "</tr>";
            $('#listOfRooms').append(html);
            $('#listOfRoomsDiv').show();
        });


        //Function to delete the room chosen
        function deleteRoom(id) {
            id = id.substr(3, id.length); //change 'delJB021' to 'JB021'
            $('#' + id).remove(); //remove the html <tr> element
        }

        //Function to change the session lengths available from the chosen period
        $('#Request_PeriodID').change(function () {
            var period = $(this).val();
            var max = 10 - period;
            if (period == "")
                max = 0;
           $('#Request_SessionLength').html("");
           $('#Request_SessionLength').append('<option value="">-- Select Length --</option>');
            for (var i = 1; i <= max; i++) {
                if(i==1)
                    $('#Request_SessionLength').append("<option value='" + i + "'>" + i + " hour</option>");
                else
                    $('#Request_SessionLength').append("<option value='" + i + "'>" + i + " hours</option>");
            }

        });
        //Function to filter the modules based on the search string
        $('#btnModSearch').click(function () {
            var str = $('#txtModSearch').val();
            if (str.replace(/ /g, '') == "")
                str = "";
            var results;
            $.post('@Url.Action("getModules", "Request")', { searchString: str }, function (data) {
                results = data;
                $('#Request_ModCode').html('<option value="">-- Select Module --</option>');
                for (var i = 0; i < results.length; i++) {
                    var modCode = results[i].Whole.substr(0, 6); //extract modcode from string
                    $('#Request_ModCode').append('<option value="'+modCode+'">' + results[i].Whole + '</option>');
                }

            });
        });
        //Function to display a list of rooms based on ticked facilities
        $("#btnFindRooms").click(function () {
            var fac = [];
            var len = $('#facListDiv').children().length;
            for (var i = 0; i < len; i += 2) {
                if ($('#facListDiv').children().eq(i).is(":checked")) {
                    fac.push($('#facListDiv').children().eq(i).val());
                }
            }
            //alert(fac.join("\n"));

            facs = JSON.stringify(fac);
            var html = "";
            $.post('@Url.Action("getMatchedRooms", "Request")', { facList: fac.join(',') }, function (data) {
                var results = data;
                for (var i = 0; i < results.length; i++) {
                    var name = results[i].Name;
                    var roomID = name.replace(/\./g, '');
                    html += "<option id='matched"+roomID+"'>"+name+"</option>";
                }
                if (results.length == 0) {
                    alert("no room has all of the chosen facilities");
                    $('#matchedRooms').hide();
                    $('#btnAddMatchedRoom').hide();
                    return;
                }
                $('#matchedRooms').fadeOut(300);
                $('#matchedRooms').promise().done(function () {
                    $('#matchedRooms').html(html).show(300);
                    $('#btnAddMatchedRoom').show(300);
                });
            },"json");
        });

        //Function to add a matched room to the room list (extremely similiar to the btnAddToRoom click function)
        $('#btnAddMatchedRoom').click(function () {
            var room = $('#matchedRooms').val();
            var roomID = room.replace(/\./g, '');
            var len = $('#listOfRooms').children().children().length;

            //return if they have picked 3 rooms
            if (len > 2)
                return;


            //Check that the room doesnt already exist in the list
            for (var i = 0; i < len; i++) {
                if ($('#listOfRooms').children().children().eq(i).attr('id') == roomID)
                    return;
            }
            
            //Create html for the room item and add it to the list
            var html = "<tr id='" + roomID + "'>";
            //we need to add this hidden input so that we can pass the room value to the controller
            html += "<input type='hidden' id='" + roomID + "' name='chosenRooms' value='" + room + "' />";
            html += "<td>" + room + "</td>";
            html += "<td><img src='/Images/delete.png' id='del" + roomID + "' onclick='deleteRoom(this.id);' height='15' width='15'/></td>";
            html += "</tr>";
            $('#listOfRooms').append(html);
            $('#listOfRoomsDiv').show();
        });

    </script>

}


