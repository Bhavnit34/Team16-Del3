@model DBFirstMVC.Models.RequestInfo

@{
    ViewBag.Title = "Request";
    ViewBag.CurrentUserTitle = @ViewBag.CurrentUser;
}

<link rel="stylesheet" href="@Url.Content("/Content/jquery-ui.css")" type="text/css" />
<link rel="stylesheet" href="@Url.Content("/Content/BhavStyle.css")" type="text/css" />
@Html.ActionLink("Back", "Index") |
@Html.ActionLink("Edit", "Edit", new { id=Model.Request.RequestID }) |
@Html.ActionLink("Copy", "Copy", new { id = Model.Request.RequestID }) |
@Html.ActionLink("Delete", "Delete", new { id=Model.Request.RequestID })


<h2 style="float:right;"> <u>Request @Model.Request.RequestID</u></h2>
<table style="float:right;"> 
    <tr><td class="approved"></td><td>APROVED</td></tr>
     <tr><td class="rejected"></td><td>REJETCED</td></tr>
       <tr><td class="pending"></td><td>PENDING</td></tr>
     <tr><td class="modified"></td><td>APPROVED BUT MODIFIED</td></tr>
    </table>

            <h2> Facilities</h2>
<ol>
@foreach (var item in Model.FacilityRequests) {

    <li>
            @Html.DisplayFor(modelItem => item.Facility.FacilityName) <!-- Display the facility name -->
        </li>
    
}
</ol>
        <h2>Requested Rooms</h2>
<ol id="roomList">
@foreach(var item in Model.RequestToRooms){

       <li><a style="cursor:pointer;" onclick="showRoomInfo(this.text);">@Html.DisplayFor(modelItem => item.RoomRequest.RoomName)</a>  (@Html.DisplayFor(modelItem => item.RoomRequest.GroupSize) students)   
           @{
                if (item.RoomRequest.PriorityRoom == 1)
                {
                    <span><u>   Priority</u></span>
                }
                   
           }
           
       </li><!-- Display the room name -->
  

}
</ol>
<h2 >Allocated Rooms</h2>     
<ol id="roomList1">
@foreach(var item in Model.AllocatedRooms){

       <li><a style="cursor:pointer;" onclick="showRoomInfo(this.text);">@Html.DisplayFor(modelItem => item.RoomName)</a>  (@Html.DisplayFor(modelItem => item.GroupSize) students)   
           @{
              
                   
           }
           
       </li><!-- Display the room name -->
  

}
</ol>

<h2>Weeks</h2>
<div>
                            <table>
                                <tr>
							        <td colspan='2'>
								        <ol id="popupWeeks">
									        <li class="ui-state-default myCircle">1</li>
									        <li class="ui-state-default myCircle">2</li>
									        <li class="ui-state-default myCircle">3</li>
									        <li class="ui-state-default myCircle">4</li>
									        <li class="ui-state-default myCircle">5</li>
									        <li class="ui-state-default myCircle">6</li>
									        <li class="ui-state-default myCircle">7</li>
									        <li class="ui-state-default myCircle">8</li>
									        <li class="ui-state-default myCircle">9</li>
									        <li class="ui-state-default myCircle">10</li>
									        <li class="ui-state-default myCircle">11</li>
									        <li class="ui-state-default myCircle">12</li>
									        <li class="ui-state-default myCircle">13</li>
									        <li class="ui-state-default myCircle">14</li>
									        <li class="ui-state-default myCircle">15</li>
								        </ol>
							        </td>
						        </tr>

                            </table>
                            <input type="hidden" id="selectedWeeks" name="selectedWeeks" value="" />
                        </div>

<!-- bring in the weeks selected, this will be shown on the selector using javascript -->
<div id="hiddenWeeks">
@Html.HiddenFor(model => model.Week.Week1)@Html.HiddenFor(model => model.Week.Week2)@Html.HiddenFor(model => model.Week.Week3)@Html.HiddenFor(model => model.Week.Week4)@Html.HiddenFor(model => model.Week.Week5)
@Html.HiddenFor(model => model.Week.Week6)@Html.HiddenFor(model => model.Week.Week7)@Html.HiddenFor(model => model.Week.Week8)@Html.HiddenFor(model => model.Week.Week9)@Html.HiddenFor(model => model.Week.Week10)
@Html.HiddenFor(model => model.Week.Week11)@Html.HiddenFor(model => model.Week.Week12)@Html.HiddenFor(model => model.Week.Week13)@Html.HiddenFor(model => model.Week.Week14)@Html.HiddenFor(model => model.Week.Week15)
</div>

<table id="RequestTable">
      @{ var statusClass = "";

      var status = "";
        var day = "";
        var time = "";

        if (Model.Request.Status == 1.ToString())
        {
            statusClass = "approved";
            status = "Approved";
     
        }

        else if (Model.Request.Status == 2.ToString())
        {
            statusClass = "rejected";
            status = "Rejected";


        }
        else if (Model.Request.Status == 3.ToString())
        {
            statusClass = "modified";
            status = "Approved But Modified";



        }

        else
        {
            statusClass = "pending";
            status = "Pending";
        }
       
        
        
        
        
        
        if (Model.Request.DayID == 1)
        {
            day = "Monday";

        }

        else if (Model.Request.DayID == 2)
        {
            day = "Tuesday";


        }
        else if (Model.Request.DayID == 3)
        {
         day="Wednesday";



        }

        else if (Model.Request.DayID == 4)
        {
            day = "Thursday";
        }
        else {
            day = "Friday";
        }
         
        switch (Model.Request.PeriodID)
        {
            case 1: time = "9:00";
                break;
            case 2: time = "10:00";
                break;
            case 3: time = "11:00";
                break;
            case 4: time = "12:00";
                break;
            case 5: time = "13:00";
                break;
            case 6: time = "14:00";
                break;
            case 7: time = "15:00";
                break;
            case 8: time = "16:00";
                break;
            case 9: time = "17:00";
                break;
        }}
    <tr>
        <td>
            <h2>Information </h2>
        </td>
    </tr>
       <tr>
        <th>
            @Html.LabelFor(model => model.Request.User.Dept.FullDept, "Dept")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.Module.Title, "Module")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.SessionType, "Type")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.SessionLength, "Length")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.DayID, "Day")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.PeriodID, "Period")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.PriorityRequest, "Priority")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.AdhocRequest, "Ad-hoc")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.SpecialRequirements, "Special Requirements")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.Semester)
        </th>
        <th>
            @Html.LabelFor(model => model.Request.RoundID, "Round")
        </th>
        <th>
            @Html.LabelFor(model => model.Request.Status)
        </th>
    </tr>
<tr>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.User.Dept.FullDept)
        </td>
        <td>
            <b>@Html.DisplayFor(modelItem => modelItem.Request.ModCode)</b><br />
            @Html.DisplayFor(modelItem => modelItem.Request.Module.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.SessionType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.SessionLength)
        </td>
        <td>
           @day
        </td>
        <td>
            @time
        </td>
        <td>
            <!--@Html.DisplayFor(modelItem => modelItem.Request.PriorityRequest)-->
            @{
                    if(Model.Request.PriorityRequest == 1){
                        @Html.CheckBox("Priority",true, new{@onclick = "return false;"})
                    }
                    else{
                        @Html.CheckBox("Priority",false, new{@onclick = "return false;"})
                    }
        
              }
        </td>
        <td>
            <!--@Html.DisplayFor(modelItem => modelItem.Request.AdhocRequest)-->
                        @{
                    if(Model.Request.AdhocRequest == 1){
                        @Html.CheckBox("Adhoc",true, new{@onclick = "return false;"})
                    }
                    else{
                        @Html.CheckBox("Adhoc",false, new{@onclick = "return false;"})
                    }
        
              }
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.SpecialRequirements)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.Semester)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.RoundID)
        </td>
        <td class ="@statusClass">
            @status
        </td>
    </tr>
    

</table>
<style type="text/css">

    .approved {
        background-color:green;
    }
    .rejected {
        background-color:#C80000;
    }
    .pending {
        background-color:grey;
    }
      .modified {
        background-color:lightyellow;
    }
    </style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@section GetRequestScript{
    <script type="text/javascript"> 
        $(document).ready(function () {
            
            //loop through the weeks passed in and check if any have been selected, change the class of the circle if so
            for (var i = 0; i < 15; i++) {
                if ($('#hiddenWeeks').children().eq(i).val() == "1") {
                    $('#popupWeeks').children().eq(i).addClass("ui-selected");
                }

            }

            //color in modified request
            if ($('#RequestTable').children().children().eq(2).children().last().text().indexOf("Modified") > -1)
                $('#roomList1').attr("style", "background-color: lightyellow;");


        });


        //function to show room info of selected room
        function showRoomInfo(room) {

            var url = '@Url.Action("DisplayRoomInfo","Request",new {id = "text"})';
            window.location.href = url.replace("text", "?id=" + room + "&caller=GetRequest");


        }
    </script>
}
