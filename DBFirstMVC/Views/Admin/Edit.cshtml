@model DBFirstMVC.Models.RequestInfo

@{

Layout = "~/Views/Shared/adminView.cshtml";

}
@{
    ViewBag.Title = "Change the status";
    ViewBag.CurrentUserTitle = @ViewBag.CurrentUser;
}

<h2>Change the status</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Request</legend>

        @Html.HiddenFor(model => model.Request.RequestID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.UserID, "User")
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Request.User.Dept.FullDept)
             @Html.HiddenFor(model => model.Request.UserID)
            @Html.ValidationMessageFor(model => model.Request.UserID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.ModCode, "Module")
        </div>
        <div class="editor-field">
             @Html.DisplayFor(modelItem => modelItem.Request.Module.Title)
             @Html.HiddenFor(model => model.Request.ModCode)
            @Html.ValidationMessageFor(model => model.Request.ModCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.SessionType, "Session")
        </div>
        <div class="editor-field">
           @Html.DisplayFor(model => model.Request.SessionType)
            @Html.HiddenFor(model => model.Request.SessionType)
            @Html.ValidationMessageFor(model => model.Request.SessionType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.SessionLength, "Session Length")
        </div>
        <div class="editor-field">
              @Html.DisplayFor(model => model.Request.SessionLength)
             @Html.HiddenFor(model => model.Request.SessionLength)
            @Html.ValidationMessageFor(model => model.Request.SessionLength)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.DayID, "Day")
        </div>
        <div class="editor-field">
             @Html.DisplayFor(model => model.Request.DayID)
             @Html.HiddenFor(model => model.Request.DayID)
            @Html.ValidationMessageFor(model => model.Request.DayID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.PeriodID, "Period")
        </div>
        <div class="editor-field">
              @Html.DisplayFor(model => model.Request.PeriodID)
             @Html.HiddenFor(model => model.Request.PeriodID)
            @Html.ValidationMessageFor(model => model.Request.PeriodID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.PriorityRequest, "Priority Request")
        </div>
        <div class="editor-field">
             @Html.DisplayFor(model => model.Request.PriorityRequest)
             @Html.HiddenFor(model => model.Request.PriorityRequest)
            @Html.ValidationMessageFor(model => model.Request.PriorityRequest)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.AdhocRequest, "AdHoc")
        </div>
        <div class="editor-field">
              @Html.DisplayFor(model => model.Request.AdhocRequest)
             @Html.HiddenFor(model => model.Request.AdhocRequest)
            @Html.ValidationMessageFor(model => model.Request.AdhocRequest)
        </div>
        @if (Model.Request.SpecialRequirements!=null){
        <div class="editor-label">
            @Html.LabelFor(model => model.Request.SpecialRequirements, "Special Requirements")
        </div>}
        <div class="editor-field">
             @Html.DisplayFor(model => model.Request.SpecialRequirements)
             @Html.HiddenFor(model => model.Request.SpecialRequirements)
            @Html.ValidationMessageFor(model => model.Request.SpecialRequirements)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Request.Semester)
        </div>
        <div class="editor-field">
             @Html.DisplayFor(model => model.Request.Semester)
             @Html.HiddenFor(model => model.Request.Semester)
            @Html.ValidationMessageFor(model => model.Request.Semester)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.WeekID, "Week")
        </div>
        <div class="editor-field">
              @Html.DisplayFor(model => model.Request.WeekID)
             @Html.HiddenFor(model => model.Request.WeekID)
            @Html.ValidationMessageFor(model => model.Request.WeekID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.RoundID)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Request.RoundID)
             @Html.HiddenFor(model => model.Request.RoundID)
            @Html.ValidationMessageFor(model => model.Request.RoundID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.Status)
        </div>
        <div class="editor-field">
                     @{
                            List<SelectListItem> listItems= new List<SelectListItem>();
                            listItems.Add(new SelectListItem { Text = "Pending", Value = "0" });
                          
                            listItems.Add(new SelectListItem{Text = "Rejected", Value = "2"});
                      
                        }

                        @Html.DropDownListFor(model => model.Request.Status, listItems, "-------- Select --------")   
            @Html.ValidationMessageFor(model => model.Request.Status)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
