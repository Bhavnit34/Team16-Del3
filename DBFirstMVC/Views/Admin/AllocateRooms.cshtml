@model DBFirstMVC.Models.RequestInfo
@using System.Linq
@{

Layout = "~/Views/Shared/adminView.cshtml";

}
@{
    ViewBag.Title = "Alloacate Rooms";
    ViewBag.CurrentUserTitle = @ViewBag.CurrentUser;
}
<link rel="stylesheet" href="@Url.Content("/Content/jquery-ui.css")" type="text/css" />
<link rel="stylesheet" href="@Url.Content("/Content/BhavStyle.css")" type="text/css" />


<table style="float:right;"> 
    <tr><td class="approved"></td><td>APROVED</td></tr>
     <tr><td class="rejected"></td><td>REJETCED</td></tr>
       <tr><td class="pending"></td><td>PENDING</td></tr>
     <tr><td class="modified"></td><td>APPROVED BUT MODIFIED</td></tr>
    </table>

<h2 style="float:right;"> <u>Request @Model.Request.RequestID</u></h2>



            <h2> Facilities</h2>
<ol>
@foreach (var item in Model.FacilityRequests) {

    <li>
            @Html.DisplayFor(modelItem => item.Facility.FacilityName) <!-- Display the facility name -->
        </li>
    
}
</ol>
               <h2>Requsted Rooms</h2>
<ol id="roomList">
@foreach(var item in Model.RequestToRooms){

       <li><a style="cursor:pointer;" onclick="showRoomInfo(this.text);">@Html.DisplayFor(modelItem => item.RoomRequest.RoomName)</a>  (@Html.DisplayFor(modelItem => item.RoomRequest.GroupSize) students)   
           @{
                if (item.RoomRequest.PriorityRoom == 1)
                {
                    <span><u>   Priority</u></span>
                }
                   
           }
           
       </li><!-- Display the room name -->
  

}
</ol>


<h2>Weeks</h2>
<div>
                            <table>
                                <tr>
							        <td colspan='2'>
								        <ol id="popupWeeks">
									        <li class="ui-state-default myCircle">1</li>
									        <li class="ui-state-default myCircle">2</li>
									        <li class="ui-state-default myCircle">3</li>
									        <li class="ui-state-default myCircle">4</li>
									        <li class="ui-state-default myCircle">5</li>
									        <li class="ui-state-default myCircle">6</li>
									        <li class="ui-state-default myCircle">7</li>
									        <li class="ui-state-default myCircle">8</li>
									        <li class="ui-state-default myCircle">9</li>
									        <li class="ui-state-default myCircle">10</li>
									        <li class="ui-state-default myCircle">11</li>
									        <li class="ui-state-default myCircle">12</li>
									        <li class="ui-state-default myCircle">13</li>
									        <li class="ui-state-default myCircle">14</li>
									        <li class="ui-state-default myCircle">15</li>
								        </ol>
							        </td>
						        </tr>

                            </table>
                            <input type="hidden" id="selectedWeeks" name="selectedWeeks" value="" />
                        </div>

<!-- bring in the weeks selected, this will be shown on the selector using javascript -->
<div id="hiddenWeeks">
@Html.HiddenFor(model => model.Week.Week1)@Html.HiddenFor(model => model.Week.Week2)@Html.HiddenFor(model => model.Week.Week3)@Html.HiddenFor(model => model.Week.Week4)@Html.HiddenFor(model => model.Week.Week5)
@Html.HiddenFor(model => model.Week.Week6)@Html.HiddenFor(model => model.Week.Week7)@Html.HiddenFor(model => model.Week.Week8)@Html.HiddenFor(model => model.Week.Week9)@Html.HiddenFor(model => model.Week.Week10)
@Html.HiddenFor(model => model.Week.Week11)@Html.HiddenFor(model => model.Week.Week12)@Html.HiddenFor(model => model.Week.Week13)@Html.HiddenFor(model => model.Week.Week14)@Html.HiddenFor(model => model.Week.Week15)
</div>



      <h3>Group Size: @ViewBag.GroupSize</h3><br>
  
<div></div>

<div id="AddNewRoom">


  @if( !Model.AllocatedRooms.Any() ){
      
      
      
      for (var i=0; i<3; i++)
      {
       <label>Room:</label><input type ="text"><label>Capacity:</label> <input type ="text"><br>

      
      
      
      
      }
      
  }
      
      


      else {
      
      
   
    int x=0;
      foreach(var item in Model.AllocatedRooms){

   <label>Room:</label>
       @Html.DisplayFor(modelItem => item.RoomName)<br> <!-- Display the room name -->       
       @Html.EditorFor(modelItem => item.RoomName)<br>
      <label>Capacity:</label>
      @Html.DisplayFor(modelItem => item.GroupSize)<br> <!-- Display group size  -->       
       @Html.EditorFor(modelItem => item.GroupSize)<br>
      
          x++;
      }
          int y = 3 - x;
            for (var i=0; i<y; i++){
             <label>Room:</label><input type ="text"><label>Capacity:</label> <input type ="text"><br>
            }
      }
     
    </div>
         <div class="editor-field">
       <input type="button" id="Allocate" value="Allocate" />

       
         </div>
<table>
         @{ var statusClass = "";
        var status = "";
        var day = "";
        var time = "";

        if (Model.Request.Status == 1.ToString())
        {
            statusClass = "approved";
            status = "Approved";
     
        }

        else if (Model.Request.Status == 2.ToString())
        {
            statusClass = "rejected";
            status = "Rejected";


        }
        else if (Model.Request.Status == 3.ToString())
        {
            statusClass = "modified";
            status = "Approved But Modified";



        }

        else
        {
            statusClass = "pending";
            status = "Pending";
        }
       
        
        
        
        
        
        if (Model.Request.DayID == 1)
        {
            day = "Monday";

        }

        else if (Model.Request.DayID == 2)
        {
            day = "Tuesday";


        }
        else if (Model.Request.DayID == 3)
        {
         day="Wednesday";



        }

        else if (Model.Request.DayID == 4)
        {
            day = "Thursday";
        }
        else {
            day = "Friday";
        }
         
        switch (Model.Request.PeriodID)
        {
            case 1: time = "9:00";
                break;
            case 2: time = "10:00";
                break;
            case 3: time = "11:00";
                break;
            case 4: time = "12:00";
                break;
            case 5: time = "13:00";
                break;
            case 6: time = "14:00";
                break;
            case 7: time = "15:00";
                break;
            case 8: time = "16:00";
                break;
            case 9: time = "17:00";
                break;
        }}
    <tr>
        <td>
            <h2>Information </h2>
        </td>
    </tr>
       <tr>
        <th>
            @Html.DisplayNameFor(model => model.Request.UserID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.Module.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.SessionType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.SessionLength)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.DayID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.PeriodID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.PriorityRequest)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.AdhocRequest)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.SpecialRequirements)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.Semester)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.RoundID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Request.Status)
        </th>
    
    </tr>
<tr>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.User.Dept.FullDept)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.Module.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.SessionType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.SessionLength)
        </td>
        <td>
           @day
        </td>
        <td>
            @time
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.PriorityRequest)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.AdhocRequest)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.SpecialRequirements)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.Semester)
        </td>
        <td>
            @Html.DisplayFor(modelItem => modelItem.Request.RoundID)
        </td>
        <td class ="@statusClass">
            @status
        </td>
    </tr>
    

</table>
<style type="text/css">

    .approved {
        background-color:green;
    }
    .rejected {
        background-color:#C80000;
    }
    .pending {
        background-color:grey;
    }
      .modified {
        background-color:lightyellow;
    }
    </style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@section MyScripts{
    <script type="text/javascript">

        $(document).ready(function () {

            //loop through the weeks passed in and check if any have been selected, change the class of the circle if so
            for (var i = 0; i < 15; i++) {

                if ($('#hiddenWeeks').children().eq(i).val() == "1") {

                    $('#popupWeeks').children().eq(i).addClass("ui-selected");
                }

            }

        });
        function showRoomInfo(room) {
            $.post('@Url.Action("ShowRoomInfo", "Request")',
                {
                    room: room
                },
                function (data, status) {
                });

                var url = '@Url.Action("DisplayRoomInfo","Request",new {id = "text"})';
                window.location.href = url.replace("text", "?id=" + room + "&caller=GetRequest");


            }

            $('#Allocate').click(function () {


                var checkArray = [];






                $("#AddNewRoom :text").each(function () {//getting values from text boxes
                    if ($(this).val() != "")
                        checkArray.push($(this).val());
                });
                function isEven(n) {
                    return (n % 2 == 0);
                }
                //check if every second element in the array is a number and if the lenght is even 
                var flag = 0;
                var size = 0;
                for (var z = 0; z < checkArray.length; z = z + 2) {
                    var temp = Number(checkArray[z + 1]);

                    if (typeof checkArray[z] == 'string' && !isNaN(temp) && isEven(checkArray.length))
                        //check capacity for numbers as well as they add up to group size 
                    {


                        size += temp;


                    }
                    else {


                        flag++;
                    }
                }

                if (flag == 0) {
                    if (size == '@ViewBag.GroupSize') {
                        // alert(checkArray);
                        var strArr = checkArray.join("?");
                        $.post('@Url.Action("CheckRooms", "Admin")', { id: strArr }, function (data) {

                            if (data.length != 0) {
                                var showError = "";
                                for (var i = 0; i < data.length; i++) {

                                    showError += data[i] + "\n";
                                }

                                alert("Room number/s :" + "\n" + showError + "do/does not exist or you exceeded capacity for the room/rooms");

                            }
                                //****************check rooms 
                            else {
                                var reqId = '@Model.Request.RequestID';
                    

                                $.post('@Url.Action("UpdateAllocations", "Admin")', { id1: reqId, id2: strArr }, function (data) { //update allocations 

                            

                                    window.location.href = 'team16web/Admin/GetRequest/' + reqId;// redirect 



                                });//end UpdateAllocations

                            }

                        });//end CheckRooms
                    }

                    else {


                        alert("Please make sure the capacity for each room adds up to group size")
                    }

                }

                else {

                    alert("Please check your input")
                }
            });
            //  });

    </script>

}